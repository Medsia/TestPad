@model LX.TestPad.Business.Models.TestModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<h1>Test Information</h1>

<form asp-action="UpdateTest" asp-route-id="@Model.Id" method="post">
    <div>
        <label asp-for="Name" style="font-weight:bold">Test Name:</label>
        <p id="Name-text">@Model.Name</p>
        <input type="text" asp-for="Name" id="Name" style="display:none" />
    </div>
    <div>
        <label asp-for="Description" style="font-weight:bold">Description:</label>
        <p id="Description-text">@Model.Description</p>
        <input type="text" asp-for="Description" id="Description" style="display:none" />
    </div>
    <div>
        <label asp-for="TestDuration" style="font-weight:bold">Test Duration:</label>
        <p id="TestDuration-text">@Model.TestDuration</p>
        <input asp-for="TestDuration" id="TestDuration" style="display:none" />
    </div>
    <div>
        <p id="IsPublished-text">
            @if (@Model.IsPublished)
            {
                <button class="btn btn-danger" asp-action="ChangeIsPublishedTest" asp-route-id="@Model.Id">
                    Make test private
                </button>
            }
            else
            {
                <button class="btn btn-success" asp-action="ChangeIsPublishedTest" asp-route-id="@Model.Id">
                    Make test public
                </button>
            }
        </p>
        <input asp-for="IsPublished" id="IsPublished" style="display:none" />
    </div>
    <div>
        <input type="submit" value="Save" id="saveButton" style="display:none" />
        <input type="button" value="Edit" id="editButton" onclick="toggleEditing()" />
        <input type="button" value="Cancel" id="cancelButton" onclick="cancelEditing()" style="display:none" />
    </div>
</form>
<a asp-action="TestQuestions" asp-route-testId="@Model.Id" class="btn btn-outline-info">Edit Questions</a>

<a asp-action="DeleteTest" asp-route-id="@Model.Id" class="text-danger">Delete Test</a>
<br>

<script>
    function applyInlineStyleFor(identifiers) {
        for (var i = 0; i < identifiers.length; i++) {
            var element = document.getElementById(identifiers[i]);
            element.style.display = "inline";
        }
    }

    function toggleEditing() {
        var inputElements = ["Name", "Description", "TestDuration"];
        var saveButton = "saveButton";
        var cancelButton = "cancelButton";

        if (document.getElementById("Name").style.display === "none") {
            applyInlineStyleFor(inputElements.concat(saveButton, cancelButton));
            document.getElementById("editButton").style.display = "none";
        } else {
            for (var i = 0; i < inputElements.length; i++) {
                var element = document.getElementById(inputElements[i]);
                element.style.display = "none";
            }
            document.getElementById("saveButton").style.display = "none";
            document.getElementById("cancelButton").style.display = "none";
            document.getElementById("editButton").style.display = "inline";

            var textElements = ["Name-text", "Description-text", "TestDuration-text"];
            applyInlineStyleFor(textElements);
        }
    }

    function cancelEditing() {
        var inputElements = ["Name", "Description", "TestDuration"];
        var saveButton = "saveButton";
        var cancelButton = "cancelButton";

        for (var i = 0; i < inputElements.length; i++) {
            var element = document.getElementById(inputElements[i]);
            element.style.display = "none";
        }
        document.getElementById("saveButton").style.display = "none";
        document.getElementById("editButton").style.display = "inline";
        document.getElementById("cancelButton").style.display = "none";

        var textElements = ["Name-text", "Description-text", "TestDuration-text"];
        applyInlineStyleFor(textElements);
    }
</script>