@model List<LX.TestPad.Business.Models.TestQuestionModel>
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Test editor";
}

<h2>Questions</h2>

<div class="header-buttons my-2">
    <a class="btn btn-outline-danger mx-1" style="width: 80px;" href="@Url.Action("TestDetails", "Admin" , new { id=ViewBag.TestId })">Back</a>
    <a asp-action="CreateQuestion" asp-route-testId="@ViewBag.TestId" class="btn btn-outline-info">Create Question</a>
    <a href="/Admin/ExistingQuestions?testId=@ViewBag.TestId" class="btn btn-outline-info">Add Question from existing test</a><br />
</div>
<table>
    <thead>
        <tr>
            <th>Question</th>
            <th>Answers</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var testQuestion in Model.OrderByDescending(tq => tq.QuestionId))
        {
            var questionId = testQuestion.Id;
            <tr>
                <td>
                    <form asp-action="UpdateQuestion" asp-route-id="@testQuestion.QuestionId"
                      asp-route-TestId="@testQuestion.TestId" method="post">
                        <div class="question-header">
                            <p id="Question-text-@questionId">@testQuestion.Question.Text</p>
                            <input type="text" name="Text" asp-for="@testQuestion.Question.Text" id="Question-@questionId" style="display:none" required />
                            <div>
                                <input type="submit" value="Save" id="saveButton-@questionId" style="display:none" />
                                <input type="button" value="Edit" id="editButton-@questionId" onclick="toggleEditingById(@questionId)" />
                                <input type="button" value="Cancel" id="cancelButton-@questionId" onclick="cancelEditingById(@questionId)" style="display:none" />
                            </div>
                        </div>
                    </form>
                </td>
                <td>
                    <ul>
                        @foreach (var answer in testQuestion.Question.Answers)
                        {
                            <li class="answer-row">
                                <span class="answer-icon @(answer.IsCorrect ? "correct" : "")">
                                    @if (answer.IsCorrect)
                                    {
                                        <span>&#10003;</span>
                                    }
                                </span>
                                @answer.Text;
                                <form asp-action="DeleteAnswer" asp-route-id="@answer.Id"
                              asp-route-testId="@testQuestion.TestId" method="post">
                                    <button class="delete-answer-button" type="submit">X</button>
                                </form>
                            </li>
                        }
                    </ul>
                    <a class="add-answer-button" asp-action="CreateAnswer" asp-route-questionId="@testQuestion.QuestionId"
                   asp-route-testId="@testQuestion.TestId" class="text-info">Add Answer</a>
                </td>
                <td class="delete-question-cell">
                    <form asp-action="DeleteTestQuestion" asp-route-id="@testQuestion.QuestionId"
                      asp-route-testId="@testQuestion.TestId" style="display: inline" method="post">
                        <button type="submit" class="delete-question-button">
                            <span class="delete-question-cross">&times;</span>
                        </button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function applyStyleFor(elements, styleName, value) {
        for (var i = 0; i < elements.length; i++) {
            var element = document.getElementById(elements[i]);
            if (element) {
                element.style[styleName] = value;
            }
        }
    }

    function toggleEditingById(id) {
        applyStyleFor(["Question-" + id, "saveButton-" + id, "cancelButton-" + id], "display", "inline");
        applyStyleFor(["Question-text-" + id, "editButton-" + id], "display", "none");
    }

    function cancelEditingById(id) {
        applyStyleFor(["Question-text-" + id, "editButton-" + id], "display", "inline");
        applyStyleFor(["saveButton-" + id, "cancelButton-" + id, "Question-" + id], "display", "none");
    }
</script>

<style>
    .header-buttons {
        float: left;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        border: 1px solid gray;
        padding: 8px;
    }

    .correct {
        color: green;
        font-weight: bold;
    }

    .answer-row {
        display: flex;
        align-items: center;
    }

    .answer-icon {
        width: 20px;
        margin-right: 8px;
    }

    .delete-answer-button {
        margin-left: auto;
    }

    .add-answer-button {
        display: block;
        margin-top: 8px;
    }

    .delete-question-cell {
        text-align: center;
    }

    .delete-question-button {
        background-color: Transparent;
        background-repeat: no-repeat;
        border: none;
        cursor: pointer;
        overflow: hidden;
        outline: none;
    }

    .delete-question-cross {
        color: red;
        font-size: 18px;
        font-weight: bold;
    }
</style>