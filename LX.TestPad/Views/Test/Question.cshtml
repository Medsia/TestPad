@model LX.TestPad.Business.Models.QuestionModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<ul class="list-group">
    <li class="list-group-item">
        <table>
            <tr>
                <th style=" text-align: left; font-size: 24px; margin-top: 0px; width: 25%" id="timer"></th>
                <th style="width: 100%"></th>
                <th style=" text-align: right; font-size: 24px; margin-top: 0px; width: 25%" id="progressShow">test</th>
            </tr>
        </table>
    </li>
    <li class="list-group-item col-12 col-md-auto mb-2 justify-content-left mb-md-0">
        <div id="myProgressBackGround" style="background-color: #ddd">
            <div id="progressBar" style="width: 0% ; height: 10px; text-align: center; line-height: 30px;">
            </div>
        </div>
    </li>
</ul>

<div>
    <form id="userAnswer" asp-route-resultId="@ViewBag.resultId" asp-route-testId="@Model.TestId">
        <div id="question-container">
            @await Html.PartialAsync("QuestionPartial", Model)
        </div>
        <input asp-for="TestId" value="@ViewBag.testId" id="TestId" hidden />
        <input value="@ViewBag.resultId" name="resultId" id="resultId" hidden />
        <li class="list-group-item" style=" text-align: right;">
            <button type="submit" form="userAnswer" hx-post="/test/SendUserAnswer" hx-target="#question-container" class="btn btn-success btn-lg" id="Nextbtn" onclick="disableButton(), currentQuestionUp()" disabled>Next</button>
        </li>
    </form>
</div>

@section scripts {
    <script>
        var currentQuestion = 1;
        var questionCount = @ViewBag.questionCount;
        var countDownDate = new Date("@ViewBag.endedAt").getTime();
        var elem = document.getElementById("progressBar");
        var progress = calculateProgress(-1);
        const colorModFromYellowToLightGreen = 5.1;
        const colorModFromLightGreenToGreen = -1.36;
        setInterval(moveProgressBar, 15);
        function moveProgressBar() {
            maxprogress = calculateProgress(0);
            if (progress <= maxprogress && progress < 100) {
                progress++;
            }
            if (progress < 50) progressColor = "#" + calculateColor(50, colorModFromYellowToLightGreen).toString(16) + "FF00";
            if (progress >= 50) progressColor = "#00" + (255 - calculateColor(50, colorModFromLightGreenToGreen)).toString(16) + "00";
            elem.style.width = progress + "%";
            elem.style.backgroundColor = progressColor;
        }
        function calculateProgress(currentQuestionMod) {
            return Math.round((currentQuestion + currentQuestionMod) * 100 / questionCount);
        }
        function calculateColor(progressMod, colorCoefficient) {
            return Math.round((progressMod - progress) * colorCoefficient);
        }
        function currentQuestionUp() {
            if (currentQuestion < questionCount) currentQuestion++;
            else window.location.replace(window.location.origin + "/Test/Result/@ViewBag.resultIdEncoded");

        }
        function updateTestTimerText() {
            var now = new Date(new Date().toISOString()).getTime();
            var distance = countDownDate - now;
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            document.getElementById("timer").innerHTML = hours + ":" + minutes + ":" + seconds;
            document.getElementById("progressShow").innerHTML = currentQuestion + "/" + questionCount;
            if (distance < 0) {
                clearInterval(startTimer);
                document.getElementById("timer").innerHTML = "EXPIRED";
                var ResultUrl = window.location.origin + "/Test/Result/@ViewBag.resultIdEncoded?IsExpired=True";
                window.location.replace(ResultUrl);
            }
        }
        updateTestTimerText();
        var startTimer = setInterval(updateTestTimerText, 1000);
    </script>
    <script>
        $(document).on('change', 'input[type="checkbox"]', function () {
            if ($('input[type="checkbox"]:checked').length > 0) {
                $('#Nextbtn').prop('disabled', false);
            } else {
                $('#Nextbtn').prop('disabled', true);
            }
        });
    </script>
    <script>
        function disableButton() {
            $('#Nextbtn').prop('disabled', true);
        }
    </script>
    <script>
        function hideButtonProgressBarTimer() {
            eval(document.getElementById("hideButtonProgressBarTimer").innerHTML);
        }
    </script>
    }