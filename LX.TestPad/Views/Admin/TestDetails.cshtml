@model LX.TestPad.Business.Models.TestModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!-- Modal -->
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Test is invalid to publish!</h5>
            </div>
            <div class="modal-body">
                Test have no questions or test question have no answers. Fix it and back later.
            </div>
            <div class="modal-footer">
                <a asp-action="TestQuestions" asp-route-testId="@Model.Id" class="btn btn-outline-info">Edit Questions</a>
            </div>
        </div>
    </div>
</div>

<h1>Test Information</h1>

<form asp-action="UpdateTest" asp-route-id="@Model.Id" method="post">
    <div>
        <label asp-for="Name" style="font-weight:bold">Test Name:</label>
        <p id="Name-text">@Model.Name</p>
        <input type="text" asp-for="Name" id="Name" style="display:none" required />
    </div>
    <div>
        <label asp-for="Description" style="font-weight:bold">Description:</label>
        <p id="Description-text">@Model.Description</p>
        <input type="text" asp-for="Description" id="Description" style="display:none" required />
    </div>
    <div>
        <label asp-for="TestDuration" style="font-weight:bold">Test Duration:</label>
        <p id="TestDuration-text">@Model.TestDuration</p>
        <input asp-for="TestDuration" id="TestDuration" style="display:none" required />
    </div>
    <div>
        <input type="submit" value="Save" id="saveButton" style="display:none" />
        <input type="button" value="Edit" id="editButton" onclick="toggleEditing()" />
        <input type="button" value="Cancel" id="cancelButton" onclick="cancelEditing()" style="display:none" />
    </div>
    <div>
        <p id="IsPublished-text">
            @if (@Model.IsPublished)
            {
                <button class="btn btn-danger" asp-action="ChangeIsPublishedTest" asp-route-id="@Model.Id">
                    Make test private
                </button>
            }
            else
            {
                <button class="btn btn-success" asp-action="ChangeIsPublishedTest" asp-route-id="@Model.Id">
                    Make test public
                </button>
            }
        </p>
        <input asp-for="IsPublished" id="IsPublished" style="display:none" />
    </div>
</form>
<a asp-action="TestQuestions" asp-route-testId="@Model.Id" class="btn btn-outline-info">Edit Questions</a>
<br />

<a asp-action="DeleteTest" asp-route-id="@Model.Id" class="text-danger">Delete Test</a>
<br>
@section scripts{
    <script>
        var valid = "@ViewBag.isValid";
        valid = valid.toString().toLowerCase();
        $(document).ready(function () {
            if (valid === "false") $('#exampleModalCenter').modal('toggle');
        });
    </script>
    <script>
        const inputName = "Name";
        const inputDescription = "Description";
        const inputTestDuration = "TestDuration";
        const textName = "Name-text";
        const textDescription = "Description-text";
        const textTestDuration = "TestDuration-text";
        const saveButton = "saveButton";
        const cancelButton = "cancelButton";
        const editButton = "editButton";

        function applyStyleFor(elements, styleName, value) {
            for (var i = 0; i < elements.length; i++) {
                var element = document.getElementById(elements[i]);
                if (element) {
                    element.style[styleName] = value;
                }
            }
        }

        function toggleEditing() {
            applyStyleFor([inputName, inputDescription, inputTestDuration, saveButton, cancelButton], "display", "inline");
            applyStyleFor([editButton, textName, textDescription, textTestDuration], "display", "none");

        }

        function cancelEditing() {
            applyStyleFor([inputName, inputDescription, inputTestDuration, saveButton, cancelButton], "display", "none");
            applyStyleFor([editButton, textName, textDescription, textTestDuration], "display", "inline");
        }
    </script>
}
